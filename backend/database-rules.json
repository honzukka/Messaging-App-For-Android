{
  "rules": {
    "users": {
      "$id": {
        ".write": "auth != null",
        "username": {
          ".validate":
          	//allow the username if it does not exist in 'usernames' or if it belongs to the current user
          	"!root.child('usernames').child(newData.val()).exists() ||
            	root.child('usernames').child(newData.val()).val() === auth.uid"
          }
      },
      ".indexOn": ["username"],
      ".read": "auth != null"
    },
    "usernames": {
      ".read": "auth != null",
      "$username": {
        ".write":
        	//only the owner can change his username
        	"root.child('usernames').child($username).val() === auth.uid
        		|| newData.val() === auth.uid"
      }
    },
    "tokens": {
      "$user_id": {
        ".write": "$user_id === auth.uid",
        ".read": "auth != null"
      }
    },
    "chats": {
      ".read": "auth != null",
      "$key": {
        // if the chat hasn't been created yet, we allow read so there is a way
        // to check this and create it; if it already exists, then authenticated
        // user (specified by auth.id) must be in $key/members to write
        ".read": "auth != null",
        ".write": "auth != null
        	&& (!data.exists() || data.child('members').child(auth.uid).exists())"
       },
       "users": {
         // if the list doesn't exist, anybody can create it
         // if it already exists, only users already in the list may modify it
         ".write": "!data.exists() || data.hasChild(auth.id)",
       }
    },
    "chatMessages": {
      "$key": {
        //chatMessage can be read/written only by users who are in members list of the chat
        ".read": "auth != null
        	&& (root.child('chats').child($key).child('members').child(auth.uid).exists())",
        ".write": "auth != null
        	&& (root.child('chats').child($key).child('members').child(auth.uid).exists())",
       },
		}
  }
}
